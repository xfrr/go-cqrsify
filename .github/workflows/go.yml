name: Build and Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.x"
      - name: Build
        run: go build -v ./...
      - name: Run tests with coverage
        run: go test -v -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Run Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.txt
          force-coverage-parser: go
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.x"
      - name: Run benchmark
        run: go test -bench=. ./... | tee output.txt
      - name: Download previous benchmark data
        if: success()
        uses: actions/cache@v4
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark
      - name: Store benchmark result
        if: success()
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: "Benchmark Tests"
          tool: "go"
          output-file-path: output.txt
          fail-on-alert: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          gh-pages-branch: gh-pages
          benchmark-data-dir-path: ./docs/dev/bench
          auto-push: true
      # Upload the updated cache file for the next job by actions/cache
      - name: Upload benchmark data cache
        if: success()
        uses: actions/cache@v4
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark
